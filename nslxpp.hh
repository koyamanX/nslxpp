#ifndef NSLXPP_HH
#define NSLXPP_HH

#include <iostream>

namespace NSLXPP {
class NSLXPP_Driver {
public:
    NSLXPP_Driver() = default;
    virtual ~NSLXPP_Driver();

    void parse(std::istream &in);
};

enum {
	ND_DECLARE,
	ND_MODULE,
	ND_INPUT,
	ND_OUTPUT,
	ND_ASSIGN,
	ND_NUMBER,
	ND_IDENTIFIER,
	ND_ADD,
	ND_SUB,
	ND_MUL,
	ND_BITWISE_AND,
	ND_BITWISE_OR,
	ND_BITWISE_XOR,
	ND_BITWISE_NOT,
	ND_EQUAL,
	ND_NOT_EQUAL,
	ND_LESS,
	ND_LESS_EQUAL,
	ND_GREATER,
	ND_GREATER_EQUAL,
	ND_SHIFT_LEFT,
	ND_SHIFT_RIGHT,
	ND_CONDITIONAL,
	ND_LOGICAL_AND,
	ND_LOGICAL_OR,
	ND_LOGICAL_NOT,
	ND_ELEMENT,
	ND_EXPRESSION,
	ND_REDUCTION_AND,
	ND_REDUCTION_OR,
	ND_REDUCTION_XOR,
	ND_REDUCTION_NOT

};
}

#endif